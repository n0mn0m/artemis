[env]
RUST_BACKTRACE = 1

[config]
skip_core_tasks = true

[tasks.default]
dependencies = [
    "nightly",
    "markdownlint",
    "clippy",
    "format",
    "test",
    "junit",
    "grcov",
    "coverage"
]

[tasks.aarch64]
install_crate = "cross"
command = "cross"
args = ["build", "--target", "aarch64-unknown-linux-gnu", "--release", "--bin", "artemis"]

[tasks.build]
command = "cargo"
args = ["build", "--verbose"]

[tasks.clean]
command = "cargo"
args = ["clean"]

[tasks.clippy]
command = "cargo"
args = ["clippy", "--all-targets"]

[tasks.coverage]
command = "reportgenerator"
args = ["-reports:coverage/lcov.info", "-targetdir:coverage", "-reporttypes:Cobertura"]

# https://github.com/rust-embedded/cross#supported-targets
[tasks.docker-aarch64]
command = "docker"
args = ["build", "-f", "./docker/aarch64.Dockerfile", "-t", "artemis/aarch64", "."]
dependencies = ["aarch64"]

[tasks.docker-compose]
command = "docker-compose"
args = ["up", "-d"]
dependencies = ["docker-down"]

[tasks.docker-debian]
command = "docker"
args = ["build", "-f", "./docker/deb.Dockerfile", "-t", "artemis/debian", "."]
dependencies = ["docker-down"]

[tasks.docker-distroless]
command = "docker"
args = ["build", "-f", "./docker/distroless.Dockerfile", "-t", "artemis/distroless", "."]
dependencies = ["docker-down"]

[tasks.docker-musl]
command = "docker"
args = ["build", "-f", "./docker/musl.Dockerfile", "-t", "artemis/musl", "."]
dependencies = ["musl"]

[tasks.docker-clean]
command = "docker"
args = ["system", "prune", "-f"]

[tasks.docker-down]
command = "docker-compose"
args = ["down", "--remove-orphans"]

[tasks.docker-test]
command = "docker-compose"
args = ["-f", "docker-compose.yml", "-f", "docker/docker-compose.test.yml", "up", "--exit-code-from", "test"]
dependencies = ["docker-down"]

[tasks.format]
install_crate = "rustfmt"
command = "cargo"
args = ["fmt", "--", "--emit=files"]

[tasks.format-check]
install_crate = "rustfmt"
command = "cargo"
args = ["fmt", "--", "--check"]

[tasks.grcov]
env = { "RUSTFLAGS" = "-Zinstrument-coverage", "LLVM_PROFILE_FILE" = "reports/llvm.profraw", "RUSTC_BOOTSTRAP" = "1" }
script = "grcov . --binary-path ./target/debug/ -s . -t lcov --branch --ignore-not-existing --ignore '/*' -o coverage/lcov.info"
dependencies = ["install-grcov"]

[tasks.junit]
script = "cat reports/test_results.json | cargo2junit > reports/test_results.xml"
dependencies = ["install-cargo2junit"]

[tasks.install-cargo-tools]
command = "cargo"
args = ["install", "cargo-audit", "cargo-bloat", "cargo-edit", "cargo-outdated", "cargo-update"]

[tasks.install-dotnet-tools]
script = "dotnet tool restore"

[tasks.install-grcov]
script = "cargo install grcov"

[tasks.install-cargo2junit]
script = "cargo install cargo2junit"

[tasks.install-reportgenerator]
ignore_errors = true
script = "dotnet tool install --tool-path /usr/local/bin dotnet-reportgenerator-globaltool --version 4.8.4"

[tasks.install-rustup-components]
script = "rustup component add llvm-tools-preview"

[tasks.install-node-tools]
script = "npm install -g markdownlint-cli"

[tasks.markdownlint]
script = "pwsh ./tools/MarkdownLint.ps1"
dependencies = ["install-node-tools"]

[tasks.mkdir-coverage]
script = "mkdir -p coverage"

[tasks.mkdir-reports]
script = "mkdir -p reports"

[tasks.musl]
install_crate = "cross"
command = "cross"
args = ["build", "--target", "x86_64-unknown-linux-musl", "--release", "--bin", "artemis"]

[tasks.nightly]
command = "rustup"
args = ["override", "set", "nightly"]

[tasks.release]
command = "cargo"
args = ["build", "--release", "--verbose"]

[tasks.stable]
command = "rustup"
args = ["override", "set", "stable"]

[tasks.test]
env = { "RUSTFLAGS" = "-Zinstrument-coverage", "LLVM_PROFILE_FILE" = "reports/llvm.profraw", "RUSTC_BOOTSTRAP" = "1" }
script = "cargo test -- -Z unstable-options --format json | tee reports/test_results.json"
dependencies = ["mkdir-coverage", "mkdir-reports", "install-rustup-components"]

[tasks.update]
script = "rustup update && cargo update"

[tasks.watch]
# Uncomment to inspect Rocket code gen.
# env = { "ROCKET_CODEGEN_DEBUG" = "1"}
command = "cargo"
args = ["watch", "-x", "check", "-x", "test", "-x", "run"]
dependencies = ["docker-compose", "format", "clippy"]
